name: Build, push, and deploy

on:
  push:
    branches:
      - master

env:
  GCP_DEPLOYMENT_SERVICE_ACCOUNT: ${{ secrets.GCP_DEPLOYMENT_SERVICE_ACCOUNT }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  DOCKER_IMAGE: eu.gcr.io/${{ secrets.GCE_PROJECT }}/frontend
  CLOUDRUN_SERVICE: ${{ secrets.CLOUDRUN_SERVICE }}
jobs:
  build-push-deploy:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      # We always update prod deployments to the "latest" container tag. GitHub actions do start in the order of merged
      # commits, but there is no guarantee on docker execution time, We could have a situation where two commits are
      # merged at the ~same time, but the earlier commit finishes building later than the most recent one, which in turn
      # means that the "latest" tag won't point to the latest commit.
      #
      # There is no builtin way to make one action run at a time, so we use Turnstyle.
      #
      # https://github.community/t/is-the-order-of-workflows-by-commit/16982/2
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,enable=true,prefix=master-,format=long
          flavor: |
            latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_DEPLOYMENT_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:cache-master
          cache-to: type=registry,mode=max,ref=${{ env.DOCKER_IMAGE }}:cache-master

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: ${{ env.CLOUDRUN_SERVICE }}
          image: ${{ env.DOCKER_IMAGE }}:master-${{ env.GITHUB_SHA }}

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
